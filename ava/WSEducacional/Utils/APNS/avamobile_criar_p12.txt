

This took me forever to figure out but I finally pieced it all together from the minor clues people left. You need to download the 
certificate for the APPID that you register on the developer portal. That certificate must be converted into a P12 format to be 
used on Windows. These commands in UNIX finally did it for me:

Step 1:

openssl x509 -in aps_developer_identity.cer -inform DER -out aps_developer_identity.pem -outform PEM}

Where aps_developer_identity.cer is the file you download from the portal

Step 2:

openssl pkcs12 -nocerts -out APSCertificates.pem -in APSCertificates.p12

Where APSCertificates.p12 is a file you export from the Mac Keychain. This is critical, you must import the certificate 
from the portal into keychain. Find it in My Certificates, open the disclosure triangle and highlight both the certificate 
and the private key, then right click and export them. Give them a password and save them to a p12 file.

Step 3:

openssl pkcs12 -export -in aps_developer_identity.pem -out aps_developer_identity.p12 -inkey APSCertificates.pem

You will be prompted a few times for the password you used to export the certificate and private key in Keychain and prompted 
again for new passwords to re-encrypt it all, but in the end you will have the file aps_developer_identity.p12 which you need 
to move to windows, then import it into both the Personal and Trusted Root sections of certificate manager in MMC. Then in C# 
when you use MoonAPNS and call the PushNotification class you give it a path to that certificate. Also make sure to remove 
spaces from the device token.

I don’t know why someone couldn’t have made it this simple in all one place to start with instead of making me and no doubt 
many others spend hours piecing this all together. But hopefully this will spare anyone in the future the pain I suffered in 
finding this all.
